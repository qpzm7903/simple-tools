{
  "ignore": [
    "build",
    "dist",
    "*.pyc",
    "*.log",
    "*.puml",
    "*.png",
    "*.svg",
    ".venv",
    ".env",
    "myenv",
    "output",
    "*/output",
    "*/__pycache__",
    "*/__pycache__/*"
  ],
  "formatOnSave": {
    "enabled": true,
    "extensions": [".py", ".md", ".json"]
  },
  "formatOnPaste": true,
  "linting": {
    "pylint": {
      "enabled": true
    },
    "flake8": {
      "enabled": true,
      "config": "${workspaceFolder}/.flake8"
    }
  },
  "indentation": {
    "python": 4
  },
  "rulers": [88, 100],
  "files": {
    "associations": {
      "*.xml": "xml",
      "*.md": "markdown",
      "*.puml": "plantuml"
    },
    "insertFinalNewline": true,
    "trimTrailingWhitespace": true
  },
  "editor": {
    "bracketPairColorization": true,
    "guides": {
      "indentation": true
    },
    "semanticHighlighting": true
  },
  "search": {
    "exclude": {
      "examples": true,
      "output": true,
      "**/__pycache__": true,
      "**/*.pyc": true,
      ".venv": true,
      "myenv": true
    }
  },
  "python": {
    "venvPath": ".venv",
    "linting": {
      "pylintEnabled": true,
      "flake8Enabled": true,
      "mypyEnabled": true
    },
    "formatting": {
      "provider": "black",
      "autopep8Args": ["--max-line-length=88"]
    }
  },
  "projectStructure": {
    "description": "MyBatis SQL Relationship Analyzer - A tool for analyzing MyBatis XML files to extract database table relationships",
    "rootFiles": {
      "app.py": "Main entry point for the web application",
      "__init__.py": "Package initialization file",
      ".env.example": "Example configuration file with environment variables",
      "README.md": "Project documentation and usage instructions",
      "requirements.txt": "Python dependencies",
      "cli_analyzer.py": "Command-line interface for analysis without web UI"
    },
    "modules": {
      "core": {
        "description": "Core analysis functionality",
        "files": {
          "analyzer.py": "Main analysis orchestration",
          "sql_parser.py": "Extracts SQL statements from MyBatis XML files",
          "normalizer.py": "Normalizes table and field names for consistent analysis",
          "relationship_extractor.py": "Extracts table relationships from SQL",
          "plantuml_generator.py": "Generates PlantUML diagrams from relationship data"
        }
      },
      "utils": {
        "description": "Utility functions and helpers",
        "files": {
          "exporter.py": "Export functionality for different output formats",
          "config.py": "Configuration management"
        }
      },
      "web": {
        "description": "Web interface components",
        "files": {
          "app.py": "Flask web application",
          "templates": "HTML templates for the web UI",
          "static": "Static assets (CSS, JavaScript, images)"
        }
      },
      "tests": {
        "description": "Test suite",
        "files": {
          "test_sql_parser.py": "Tests for SQL parsing functionality",
          "test_relationship_extractor.py": "Tests for relationship extraction",
          "resources": "Test data and fixtures"
        }
      },
      "examples": {
        "description": "Example MyBatis XML files for demonstration"
      }
    },
    "dataFlow": {
      "1": "XML files are parsed by sql_parser.py",
      "2": "SQL is normalized by normalizer.py",
      "3": "Relationships are extracted by relationship_extractor.py",
      "4": "Results are transformed to PlantUML by plantuml_generator.py",
      "5": "Output is exported via exporter.py in various formats"
    }
  }
} 